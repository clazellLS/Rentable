extends layout

block content
  head
    title Leaflet.GeoSearch / Google Provider
    | &#x9;&#x9;
    link(rel='stylesheet', href='http://cdn.leafletjs.com/leaflet-0.4.4/leaflet.css')
    //if lte IE 8
      link(rel='stylesheet', href='http://cdn.leafletjs.com/leaflet-0.4.4/leaflet.ie.css')
    | &#x9;&#x9;
    | &#x9;&#x9;
    script(src='http://cdn.leafletjs.com/leaflet-0.4.4/leaflet.js')
    | &#x9;&#x9;
    script(src='http://code.jquery.com/jquery-1.8.3.min.js')
    | &#x9;&#x9;
    script(src='js/l.control.geosearch.js')
    | &#x9;&#x9;
    script(src='js/l.geosearch.provider.google.js')
    | &#x9;&#x9;
    link(rel='stylesheet', href='css/l.geosearch.css')
  body
    input#leaflet-control-geosearch-qry(type='text', placeholder='search for address...')
    #map(style='position: absolute; top: 0; left: 0; width: 100%; height: 100%;')
    | &#x9;
    | &#x9;
    script(type='text/javascript').
      /**
      * get url paramaters
      */
      function getURLParameter(name) {
      return decodeURI(
      (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,])[1]
      );
      }
      var regionParameter = getURLParameter('region');
      var region = (regionParameter === 'undefined') ? '' : regionParameter;
      /**
      * create map
      **/
      var cloudmadeUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';
      var basemap = new L.TileLayer(cloudmadeUrl, {maxZoom: 18});
      var map = new L.Map('map', {
      layers: [basemap],
      center: new L.LatLng(53.2, 5.8), zoom: 12
      });
      new L.Control.GeoSearch({
      provider: new L.GeoSearch.Provider.Google({
      region: region
      })
      }).addTo(map);
